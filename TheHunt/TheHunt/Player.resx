<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCAAvAC0DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        6PFfiu18F6X9quvNk8xxDb28K757qVvuxRr/ABMcH0AAJJCgkeU/tD/G/wAL/s9/C288efG7x/pvw18G
        2p2i3GqGyUPtLpEbiMrPcXLCN2WG325+ZAk23eyfG/8AaH8Lfs9/C/x/8bvHl41r4N+GtneC3CbfMC25
        MdwY0YqGuZ7hPs8as3OyMIV85w34Fav4gm/4KM6R4l/bW/bA1bSrbwPp1vqT/CT4ZajrX2XS7pYEkKRA
        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
</value>
  </data>
</root>